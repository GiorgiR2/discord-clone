{"ast":null,"code":"import _classCallCheck from \"/home/giorgir/Desktop/web projects/discord-mern/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/giorgir/Desktop/web projects/discord-mern/client/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/home/giorgir/Desktop/web projects/discord-mern/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _get from \"/home/giorgir/Desktop/web projects/discord-mern/client/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/home/giorgir/Desktop/web projects/discord-mern/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/home/giorgir/Desktop/web projects/discord-mern/client/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/giorgir/Desktop/web projects/discord-mern/client/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nexport var Transport = /*#__PURE__*/function (_Emitter) {\n  _inherits(Transport, _Emitter);\n\n  var _super = _createSuper(Transport);\n\n  /**\n   * Transport abstract constructor.\n   *\n   * @param {Object} options.\n   * @api private\n   */\n  function Transport(opts) {\n    var _this;\n\n    _classCallCheck(this, Transport);\n\n    _this = _super.call(this);\n    _this.writable = false;\n    installTimerFunctions(_assertThisInitialized(_this), opts);\n    _this.opts = opts;\n    _this.query = opts.query;\n    _this.readyState = \"\";\n    _this.socket = opts.socket;\n    return _this;\n  }\n  /**\n   * Emits an error.\n   *\n   * @param {String} str\n   * @return {Transport} for chaining\n   * @api protected\n   */\n\n\n  _createClass(Transport, [{\n    key: \"onError\",\n    value: function onError(msg, desc) {\n      var err = new Error(msg); // @ts-ignore\n\n      err.type = \"TransportError\"; // @ts-ignore\n\n      err.description = desc;\n\n      _get(_getPrototypeOf(Transport.prototype), \"emit\", this).call(this, \"error\", err);\n\n      return this;\n    }\n    /**\n     * Opens the transport.\n     *\n     * @api public\n     */\n\n  }, {\n    key: \"open\",\n    value: function open() {\n      if (\"closed\" === this.readyState || \"\" === this.readyState) {\n        this.readyState = \"opening\";\n        this.doOpen();\n      }\n\n      return this;\n    }\n    /**\n     * Closes the transport.\n     *\n     * @api public\n     */\n\n  }, {\n    key: \"close\",\n    value: function close() {\n      if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n        this.doClose();\n        this.onClose();\n      }\n\n      return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     * @api public\n     */\n\n  }, {\n    key: \"send\",\n    value: function send(packets) {\n      if (\"open\" === this.readyState) {\n        this.write(packets);\n      } else {// this might happen if the transport was silently closed in the beforeunload event handler\n      }\n    }\n    /**\n     * Called upon open\n     *\n     * @api protected\n     */\n\n  }, {\n    key: \"onOpen\",\n    value: function onOpen() {\n      this.readyState = \"open\";\n      this.writable = true;\n\n      _get(_getPrototypeOf(Transport.prototype), \"emit\", this).call(this, \"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @api protected\n     */\n\n  }, {\n    key: \"onData\",\n    value: function onData(data) {\n      var packet = decodePacket(data, this.socket.binaryType);\n      this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @api protected\n     */\n\n  }, {\n    key: \"onPacket\",\n    value: function onPacket(packet) {\n      _get(_getPrototypeOf(Transport.prototype), \"emit\", this).call(this, \"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @api protected\n     */\n\n  }, {\n    key: \"onClose\",\n    value: function onClose() {\n      this.readyState = \"closed\";\n\n      _get(_getPrototypeOf(Transport.prototype), \"emit\", this).call(this, \"close\");\n    }\n  }]);\n\n  return Transport;\n}(Emitter);","map":{"version":3,"names":["decodePacket","Emitter","installTimerFunctions","Transport","opts","writable","query","readyState","socket","msg","desc","err","Error","type","description","doOpen","doClose","onClose","packets","write","data","packet","binaryType","onPacket"],"sources":["/home/giorgir/Desktop/web projects/discord-mern/client/node_modules/engine.io-client/build/esm/transport.js"],"sourcesContent":["import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} options.\n     * @api private\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.readyState = \"\";\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} str\n     * @return {Transport} for chaining\n     * @api protected\n     */\n    onError(msg, desc) {\n        const err = new Error(msg);\n        // @ts-ignore\n        err.type = \"TransportError\";\n        // @ts-ignore\n        err.description = desc;\n        super.emit(\"error\", err);\n        return this;\n    }\n    /**\n     * Opens the transport.\n     *\n     * @api public\n     */\n    open() {\n        if (\"closed\" === this.readyState || \"\" === this.readyState) {\n            this.readyState = \"opening\";\n            this.doOpen();\n        }\n        return this;\n    }\n    /**\n     * Closes the transport.\n     *\n     * @api public\n     */\n    close() {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     * @api public\n     */\n    send(packets) {\n        if (\"open\" === this.readyState) {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @api protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emit(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @api protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @api protected\n     */\n    onPacket(packet) {\n        super.emit(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @api protected\n     */\n    onClose() {\n        this.readyState = \"closed\";\n        super.emit(\"close\");\n    }\n}\n"],"mappings":";;;;;;;AAAA,SAASA,YAAT,QAA6B,kBAA7B;AACA,SAASC,OAAT,QAAwB,8BAAxB;AACA,SAASC,qBAAT,QAAsC,WAAtC;AACA,WAAaC,SAAb;EAAA;;EAAA;;EACI;AACJ;AACA;AACA;AACA;AACA;EACI,mBAAYC,IAAZ,EAAkB;IAAA;;IAAA;;IACd;IACA,MAAKC,QAAL,GAAgB,KAAhB;IACAH,qBAAqB,gCAAOE,IAAP,CAArB;IACA,MAAKA,IAAL,GAAYA,IAAZ;IACA,MAAKE,KAAL,GAAaF,IAAI,CAACE,KAAlB;IACA,MAAKC,UAAL,GAAkB,EAAlB;IACA,MAAKC,MAAL,GAAcJ,IAAI,CAACI,MAAnB;IAPc;EAQjB;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;EAtBA;IAAA;IAAA,OAuBI,iBAAQC,GAAR,EAAaC,IAAb,EAAmB;MACf,IAAMC,GAAG,GAAG,IAAIC,KAAJ,CAAUH,GAAV,CAAZ,CADe,CAEf;;MACAE,GAAG,CAACE,IAAJ,GAAW,gBAAX,CAHe,CAIf;;MACAF,GAAG,CAACG,WAAJ,GAAkBJ,IAAlB;;MACA,oEAAW,OAAX,EAAoBC,GAApB;;MACA,OAAO,IAAP;IACH;IACD;AACJ;AACA;AACA;AACA;;EApCA;IAAA;IAAA,OAqCI,gBAAO;MACH,IAAI,aAAa,KAAKJ,UAAlB,IAAgC,OAAO,KAAKA,UAAhD,EAA4D;QACxD,KAAKA,UAAL,GAAkB,SAAlB;QACA,KAAKQ,MAAL;MACH;;MACD,OAAO,IAAP;IACH;IACD;AACJ;AACA;AACA;AACA;;EAhDA;IAAA;IAAA,OAiDI,iBAAQ;MACJ,IAAI,cAAc,KAAKR,UAAnB,IAAiC,WAAW,KAAKA,UAArD,EAAiE;QAC7D,KAAKS,OAAL;QACA,KAAKC,OAAL;MACH;;MACD,OAAO,IAAP;IACH;IACD;AACJ;AACA;AACA;AACA;AACA;;EA7DA;IAAA;IAAA,OA8DI,cAAKC,OAAL,EAAc;MACV,IAAI,WAAW,KAAKX,UAApB,EAAgC;QAC5B,KAAKY,KAAL,CAAWD,OAAX;MACH,CAFD,MAGK,CACD;MACH;IACJ;IACD;AACJ;AACA;AACA;AACA;;EA1EA;IAAA;IAAA,OA2EI,kBAAS;MACL,KAAKX,UAAL,GAAkB,MAAlB;MACA,KAAKF,QAAL,GAAgB,IAAhB;;MACA,oEAAW,MAAX;IACH;IACD;AACJ;AACA;AACA;AACA;AACA;;EArFA;IAAA;IAAA,OAsFI,gBAAOe,IAAP,EAAa;MACT,IAAMC,MAAM,GAAGrB,YAAY,CAACoB,IAAD,EAAO,KAAKZ,MAAL,CAAYc,UAAnB,CAA3B;MACA,KAAKC,QAAL,CAAcF,MAAd;IACH;IACD;AACJ;AACA;AACA;AACA;;EA9FA;IAAA;IAAA,OA+FI,kBAASA,MAAT,EAAiB;MACb,oEAAW,QAAX,EAAqBA,MAArB;IACH;IACD;AACJ;AACA;AACA;AACA;;EAtGA;IAAA;IAAA,OAuGI,mBAAU;MACN,KAAKd,UAAL,GAAkB,QAAlB;;MACA,oEAAW,OAAX;IACH;EA1GL;;EAAA;AAAA,EAA+BN,OAA/B"},"metadata":{},"sourceType":"module"}