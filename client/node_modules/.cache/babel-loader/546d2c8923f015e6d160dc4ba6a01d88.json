{"ast":null,"code":"import io from'socket.io-client';var main=function main(room,username,setElement,setOnline,setOffline){if(socket.disconnected)socket=io.connect(domain);socket.emit('join',{room:room,username:username});console.log(\"sent join\",room,username);// socket.on('connect', () => {\n// console.log(\"connected\", room, username);\n// socket.emit('join', {\n//     room: room,\n//     username: username,\n// });\n// });\nsocket.on('M_S_O',function(data){console.log('received',data.message);setElement({user:data.username,msg:data.message,date:data.datetime});});socket.on('messagesData',function(data){data.forEach(function(el){return setElement({user:el.user,msg:el.message,date:el.date});});});socket.on('online',function(data){setOnline(\"\");setOnline(data.username);});socket.on('offline',function(data){setOffline(\"\");setOffline(data.username);});socket.on('status',function(data){data.forEach(function(el){if(el.status===\"online\")setOnline(el.username);else setOffline(el.username);});});};var urlify=function urlify(text){var urlRegex=/(https?:\\/\\/[^\\s]+)/g;return text.replace(urlRegex,function(url){return\"</a12>\".concat(url,\"</a12>\");});};var getTime=function getTime(){var currentdate=new Date();var datetime=\"\".concat(currentdate.getMonth()+1,\"/\").concat(currentdate.getDate(),\"/\").concat(currentdate.getFullYear(),\" \").concat(currentdate.getHours(),\":\").concat(currentdate.getMinutes());return datetime;};var sendMessage=function sendMessage(e,user,room,roomId,authentication){if(e.key===\"Enter\"&&e.shiftKey!==true&&e.target.value!=null){var message=e.target.value;var datetime=getTime();var sdata={authentication:authentication,username:user,message:message,datetime:datetime,room:room,roomId:roomId};socket.emit('message',sdata);e.target.value=\"\";e.preventDefault();}};var disconnect=function disconnect(){return socket.disconnect();};var domain=\"http://\".concat(window.location.hostname,\":5000\");var socket=io.connect(domain);export{socket,main,sendMessage,disconnect};","map":{"version":3,"names":["io","main","room","username","setElement","setOnline","setOffline","socket","disconnected","connect","domain","emit","console","log","on","data","message","user","msg","date","datetime","forEach","el","status","urlify","text","urlRegex","replace","url","getTime","currentdate","Date","getMonth","getDate","getFullYear","getHours","getMinutes","sendMessage","e","roomId","authentication","key","shiftKey","target","value","sdata","preventDefault","disconnect","window","location","hostname"],"sources":["/home/giorgir/Desktop/web projects/discord-mern/client/src/components/js/_socketSide.js"],"sourcesContent":["import io from 'socket.io-client';\r\n\r\nconst main = (room, username, setElement, setOnline, setOffline) => {\r\n    if (socket.disconnected)\r\n        socket = io.connect(domain);\r\n\r\n    socket.emit('join', {\r\n        room: room,\r\n        username: username,\r\n    });\r\n    console.log(\"sent join\", room, username);\r\n    // socket.on('connect', () => {\r\n        // console.log(\"connected\", room, username);\r\n        // socket.emit('join', {\r\n        //     room: room,\r\n        //     username: username,\r\n        // });\r\n    // });\r\n\r\n    socket.on('M_S_O', (data) => {\r\n        console.log('received', data.message);\r\n        setElement({\r\n            user: data.username,\r\n            msg: data.message,\r\n            date: data.datetime\r\n        });\r\n    });\r\n\r\n    socket.on('messagesData', (data) => {\r\n        data.forEach(el => setElement({\r\n            user: el.user,\r\n            msg: el.message,\r\n            date: el.date,\r\n        }));\r\n    });\r\n\r\n    socket.on('online', (data) => {\r\n        setOnline(\"\");\r\n        setOnline(data.username);\r\n    });\r\n\r\n    socket.on('offline', (data) => {\r\n        setOffline(\"\");\r\n        setOffline(data.username);\r\n    });\r\n\r\n    socket.on('status', (data) => {\r\n        data.forEach(el => {\r\n            if (el.status === \"online\")\r\n                setOnline(el.username);\r\n            else\r\n                setOffline(el.username);\r\n        });\r\n    });\r\n}\r\n\r\nconst urlify = (text) => {\r\n    var urlRegex = /(https?:\\/\\/[^\\s]+)/g;\r\n    return text.replace(urlRegex, function(url) {\r\n      return `</a12>${url}</a12>`;\r\n    })\r\n}\r\n\r\nlet getTime = () => {\r\n    let currentdate = new Date();\r\n\r\n    let datetime = `${currentdate.getMonth()+1}/${currentdate.getDate()}/${currentdate.getFullYear()} ${currentdate.getHours()}:${currentdate.getMinutes()}`;\r\n\r\n    return datetime;\r\n}\r\n\r\nconst sendMessage = (e, user, room, roomId, authentication) => {\r\n    if (e.key === \"Enter\" && e.shiftKey !== true && e.target.value != null){\r\n        let message = e.target.value;\r\n        let datetime = getTime();\r\n\r\n        let sdata = {\r\n            authentication: authentication,\r\n            username:  user,\r\n            message: message,\r\n            datetime: datetime,\r\n            room: room,\r\n            roomId: roomId,\r\n        };\r\n        \r\n        socket.emit('message', sdata);\r\n        e.target.value = \"\";\r\n        e.preventDefault();\r\n    }\r\n}\r\n\r\nconst disconnect = () => socket.disconnect();\r\n\r\nconst domain = `http://${window.location.hostname}:5000`;\r\nvar socket = io.connect(domain);\r\n\r\nexport {\r\n    socket,\r\n    main,\r\n    sendMessage,\r\n    disconnect,\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}