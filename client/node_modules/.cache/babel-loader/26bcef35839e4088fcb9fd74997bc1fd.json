{"ast":null,"code":"/*! queue-microtask. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nvar promise;\nmodule.exports = typeof queueMicrotask === 'function' ? queueMicrotask.bind(typeof window !== 'undefined' ? window : global) // reuse resolved promise, and allocate it lazily\n: function (cb) {\n  return (promise || (promise = Promise.resolve())).then(cb).catch(function (err) {\n    return setTimeout(function () {\n      throw err;\n    }, 0);\n  });\n};","map":{"version":3,"names":["promise","module","exports","queueMicrotask","bind","window","global","cb","Promise","resolve","then","catch","err","setTimeout"],"sources":["/home/giorgir/Desktop/web projects/discord-mern/client/node_modules/queue-microtask/index.js"],"sourcesContent":["/*! queue-microtask. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nlet promise\n\nmodule.exports = typeof queueMicrotask === 'function'\n  ? queueMicrotask.bind(typeof window !== 'undefined' ? window : global)\n  // reuse resolved promise, and allocate it lazily\n  : cb => (promise || (promise = Promise.resolve()))\n    .then(cb)\n    .catch(err => setTimeout(() => { throw err }, 0))\n"],"mappings":"AAAA;AACA,IAAIA,OAAJ;AAEAC,MAAM,CAACC,OAAP,GAAiB,OAAOC,cAAP,KAA0B,UAA1B,GACbA,cAAc,CAACC,IAAf,CAAoB,OAAOC,MAAP,KAAkB,WAAlB,GAAgCA,MAAhC,GAAyCC,MAA7D,CADa,CAEf;AAFe,EAGb,UAAAC,EAAE;EAAA,OAAI,CAACP,OAAO,KAAKA,OAAO,GAAGQ,OAAO,CAACC,OAAR,EAAf,CAAR,EACLC,IADK,CACAH,EADA,EAELI,KAFK,CAEC,UAAAC,GAAG;IAAA,OAAIC,UAAU,CAAC,YAAM;MAAE,MAAMD,GAAN;IAAW,CAApB,EAAsB,CAAtB,CAAd;EAAA,CAFJ,CAAJ;AAAA,CAHN"},"metadata":{},"sourceType":"script"}