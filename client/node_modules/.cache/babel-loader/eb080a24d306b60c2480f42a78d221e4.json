{"ast":null,"code":"/* global attachEvent */\nimport XMLHttpRequest from \"./xmlhttprequest.js\";\nimport globalThis from \"../globalThis.js\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { Polling } from \"./polling.js\";\n/**\n * Empty function\n */\n\nfunction empty() {}\n\nconst hasXHR2 = function () {\n  const xhr = new XMLHttpRequest({\n    xdomain: false\n  });\n  return null != xhr.responseType;\n}();\n\nexport class XHR extends Polling {\n  /**\n   * XHR Polling constructor.\n   *\n   * @param {Object} opts\n   * @api public\n   */\n  constructor(opts) {\n    super(opts);\n\n    if (typeof location !== \"undefined\") {\n      const isSSL = \"https:\" === location.protocol;\n      let port = location.port; // some user agents have empty `location.port`\n\n      if (!port) {\n        port = isSSL ? \"443\" : \"80\";\n      }\n\n      this.xd = typeof location !== \"undefined\" && opts.hostname !== location.hostname || port !== opts.port;\n      this.xs = opts.secure !== isSSL;\n    }\n    /**\n     * XHR supports binary\n     */\n\n\n    const forceBase64 = opts && opts.forceBase64;\n    this.supportsBinary = hasXHR2 && !forceBase64;\n  }\n  /**\n   * Creates a request.\n   *\n   * @param {String} method\n   * @api private\n   */\n\n\n  request() {\n    let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    Object.assign(opts, {\n      xd: this.xd,\n      xs: this.xs\n    }, this.opts);\n    return new Request(this.uri(), opts);\n  }\n  /**\n   * Sends data.\n   *\n   * @param {String} data to send.\n   * @param {Function} called upon flush.\n   * @api private\n   */\n\n\n  doWrite(data, fn) {\n    const req = this.request({\n      method: \"POST\",\n      data: data\n    });\n    req.on(\"success\", fn);\n    req.on(\"error\", err => {\n      this.onError(\"xhr post error\", err);\n    });\n  }\n  /**\n   * Starts a poll cycle.\n   *\n   * @api private\n   */\n\n\n  doPoll() {\n    const req = this.request();\n    req.on(\"data\", this.onData.bind(this));\n    req.on(\"error\", err => {\n      this.onError(\"xhr poll error\", err);\n    });\n    this.pollXhr = req;\n  }\n\n}\nexport class Request extends Emitter {\n  /**\n   * Request constructor\n   *\n   * @param {Object} options\n   * @api public\n   */\n  constructor(uri, opts) {\n    super();\n    installTimerFunctions(this, opts);\n    this.opts = opts;\n    this.method = opts.method || \"GET\";\n    this.uri = uri;\n    this.async = false !== opts.async;\n    this.data = undefined !== opts.data ? opts.data : null;\n    this.create();\n  }\n  /**\n   * Creates the XHR object and sends the request.\n   *\n   * @api private\n   */\n\n\n  create() {\n    const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n    opts.xdomain = !!this.opts.xd;\n    opts.xscheme = !!this.opts.xs;\n    const xhr = this.xhr = new XMLHttpRequest(opts);\n\n    try {\n      xhr.open(this.method, this.uri, this.async);\n\n      try {\n        if (this.opts.extraHeaders) {\n          xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n\n          for (let i in this.opts.extraHeaders) {\n            if (this.opts.extraHeaders.hasOwnProperty(i)) {\n              xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n            }\n          }\n        }\n      } catch (e) {}\n\n      if (\"POST\" === this.method) {\n        try {\n          xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n        } catch (e) {}\n      }\n\n      try {\n        xhr.setRequestHeader(\"Accept\", \"*/*\");\n      } catch (e) {} // ie6 check\n\n\n      if (\"withCredentials\" in xhr) {\n        xhr.withCredentials = this.opts.withCredentials;\n      }\n\n      if (this.opts.requestTimeout) {\n        xhr.timeout = this.opts.requestTimeout;\n      }\n\n      xhr.onreadystatechange = () => {\n        if (4 !== xhr.readyState) return;\n\n        if (200 === xhr.status || 1223 === xhr.status) {\n          this.onLoad();\n        } else {\n          // make sure the `error` event handler that's user-set\n          // does not throw in the same tick and gets caught here\n          this.setTimeoutFn(() => {\n            this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n          }, 0);\n        }\n      };\n\n      xhr.send(this.data);\n    } catch (e) {\n      // Need to defer since .create() is called directly from the constructor\n      // and thus the 'error' event can only be only bound *after* this exception\n      // occurs.  Therefore, also, we cannot throw here at all.\n      this.setTimeoutFn(() => {\n        this.onError(e);\n      }, 0);\n      return;\n    }\n\n    if (typeof document !== \"undefined\") {\n      this.index = Request.requestsCount++;\n      Request.requests[this.index] = this;\n    }\n  }\n  /**\n   * Called upon successful response.\n   *\n   * @api private\n   */\n\n\n  onSuccess() {\n    this.emit(\"success\");\n    this.cleanup();\n  }\n  /**\n   * Called if we have data.\n   *\n   * @api private\n   */\n\n\n  onData(data) {\n    this.emit(\"data\", data);\n    this.onSuccess();\n  }\n  /**\n   * Called upon error.\n   *\n   * @api private\n   */\n\n\n  onError(err) {\n    this.emit(\"error\", err);\n    this.cleanup(true);\n  }\n  /**\n   * Cleans up house.\n   *\n   * @api private\n   */\n\n\n  cleanup(fromError) {\n    if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n      return;\n    }\n\n    this.xhr.onreadystatechange = empty;\n\n    if (fromError) {\n      try {\n        this.xhr.abort();\n      } catch (e) {}\n    }\n\n    if (typeof document !== \"undefined\") {\n      delete Request.requests[this.index];\n    }\n\n    this.xhr = null;\n  }\n  /**\n   * Called upon load.\n   *\n   * @api private\n   */\n\n\n  onLoad() {\n    const data = this.xhr.responseText;\n\n    if (data !== null) {\n      this.onData(data);\n    }\n  }\n  /**\n   * Aborts the request.\n   *\n   * @api public\n   */\n\n\n  abort() {\n    this.cleanup();\n  }\n\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\n\nif (typeof document !== \"undefined\") {\n  // @ts-ignore\n  if (typeof attachEvent === \"function\") {\n    // @ts-ignore\n    attachEvent(\"onunload\", unloadHandler);\n  } else if (typeof addEventListener === \"function\") {\n    const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n    addEventListener(terminationEvent, unloadHandler, false);\n  }\n}\n\nfunction unloadHandler() {\n  for (let i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}","map":{"version":3,"names":["XMLHttpRequest","globalThis","installTimerFunctions","pick","Emitter","Polling","empty","hasXHR2","xhr","xdomain","responseType","XHR","constructor","opts","location","isSSL","protocol","port","xd","hostname","xs","secure","forceBase64","supportsBinary","request","Object","assign","Request","uri","doWrite","data","fn","req","method","on","err","onError","doPoll","onData","bind","pollXhr","async","undefined","create","xscheme","open","extraHeaders","setDisableHeaderCheck","i","hasOwnProperty","setRequestHeader","e","withCredentials","requestTimeout","timeout","onreadystatechange","readyState","status","onLoad","setTimeoutFn","send","document","index","requestsCount","requests","onSuccess","emit","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","addEventListener","terminationEvent"],"sources":["/home/giorgir/Desktop/web projects/discord-mern/client/node_modules/engine.io-client/build/esm/transports/polling-xhr.js"],"sourcesContent":["/* global attachEvent */\nimport XMLHttpRequest from \"./xmlhttprequest.js\";\nimport globalThis from \"../globalThis.js\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { Polling } from \"./polling.js\";\n/**\n * Empty function\n */\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false\n    });\n    return null != xhr.responseType;\n})();\nexport class XHR extends Polling {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @api private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @api private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", err => {\n            this.onError(\"xhr post error\", err);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @api private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", err => {\n            this.onError(\"xhr poll error\", err);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @api public\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @api private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon successful response.\n     *\n     * @api private\n     */\n    onSuccess() {\n        this.emit(\"success\");\n        this.cleanup();\n    }\n    /**\n     * Called if we have data.\n     *\n     * @api private\n     */\n    onData(data) {\n        this.emit(\"data\", data);\n        this.onSuccess();\n    }\n    /**\n     * Called upon error.\n     *\n     * @api private\n     */\n    onError(err) {\n        this.emit(\"error\", err);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @api private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @api private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.onData(data);\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @api public\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}