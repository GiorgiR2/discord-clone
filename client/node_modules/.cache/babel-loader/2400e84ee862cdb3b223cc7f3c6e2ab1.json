{"ast":null,"code":"/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\n/* eslint-disable no-proto */\n'use strict';\n\nconst base64 = require('base64-js');\n\nconst ieee754 = require('ieee754');\n\nconst customInspectSymbol = typeof Symbol === 'function' && typeof Symbol['for'] === 'function' // eslint-disable-line dot-notation\n? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n: null;\nexports.Buffer = Buffer;\nexports.SlowBuffer = SlowBuffer;\nexports.INSPECT_MAX_BYTES = 50;\nconst K_MAX_LENGTH = 0x7fffffff;\nexports.kMaxLength = K_MAX_LENGTH;\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\n\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport();\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' && typeof console.error === 'function') {\n  console.error('This browser lacks typed array (Uint8Array) support which is required by ' + '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.');\n}\n\nfunction typedArraySupport() {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1);\n    const proto = {\n      foo: function () {\n        return 42;\n      }\n    };\n    Object.setPrototypeOf(proto, Uint8Array.prototype);\n    Object.setPrototypeOf(arr, proto);\n    return arr.foo() === 42;\n  } catch (e) {\n    return false;\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined;\n    return this.buffer;\n  }\n});\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined;\n    return this.byteOffset;\n  }\n});\n\nfunction createBuffer(length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"');\n  } // Return an augmented `Uint8Array` instance\n\n\n  const buf = new Uint8Array(length);\n  Object.setPrototypeOf(buf, Buffer.prototype);\n  return buf;\n}\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\n\nfunction Buffer(arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError('The \"string\" argument must be of type string. Received type number');\n    }\n\n    return allocUnsafe(arg);\n  }\n\n  return from(arg, encodingOrOffset, length);\n}\n\nBuffer.poolSize = 8192; // not used by this implementation\n\nfunction from(value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset);\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value);\n  }\n\n  if (value == null) {\n    throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' + 'or Array-like Object. Received type ' + typeof value);\n  }\n\n  if (isInstance(value, ArrayBuffer) || value && isInstance(value.buffer, ArrayBuffer)) {\n    return fromArrayBuffer(value, encodingOrOffset, length);\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' && (isInstance(value, SharedArrayBuffer) || value && isInstance(value.buffer, SharedArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length);\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError('The \"value\" argument must not be of type number. Received type number');\n  }\n\n  const valueOf = value.valueOf && value.valueOf();\n\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length);\n  }\n\n  const b = fromObject(value);\n  if (b) return b;\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null && typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length);\n  }\n\n  throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' + 'or Array-like Object. Received type ' + typeof value);\n}\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\n\n\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length);\n}; // Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\n\n\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype);\nObject.setPrototypeOf(Buffer, Uint8Array);\n\nfunction assertSize(size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number');\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"');\n  }\n}\n\nfunction alloc(size, fill, encoding) {\n  assertSize(size);\n\n  if (size <= 0) {\n    return createBuffer(size);\n  }\n\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string' ? createBuffer(size).fill(fill, encoding) : createBuffer(size).fill(fill);\n  }\n\n  return createBuffer(size);\n}\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\n\n\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding);\n};\n\nfunction allocUnsafe(size) {\n  assertSize(size);\n  return createBuffer(size < 0 ? 0 : checked(size) | 0);\n}\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\n\n\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size);\n};\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\n\n\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size);\n};\n\nfunction fromString(string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8';\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding);\n  }\n\n  const length = byteLength(string, encoding) | 0;\n  let buf = createBuffer(length);\n  const actual = buf.write(string, encoding);\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual);\n  }\n\n  return buf;\n}\n\nfunction fromArrayLike(array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0;\n  const buf = createBuffer(length);\n\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255;\n  }\n\n  return buf;\n}\n\nfunction fromArrayView(arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView);\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength);\n  }\n\n  return fromArrayLike(arrayView);\n}\n\nfunction fromArrayBuffer(array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds');\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds');\n  }\n\n  let buf;\n\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array);\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset);\n  } else {\n    buf = new Uint8Array(array, byteOffset, length);\n  } // Return an augmented `Uint8Array` instance\n\n\n  Object.setPrototypeOf(buf, Buffer.prototype);\n  return buf;\n}\n\nfunction fromObject(obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0;\n    const buf = createBuffer(len);\n\n    if (buf.length === 0) {\n      return buf;\n    }\n\n    obj.copy(buf, 0, 0, len);\n    return buf;\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0);\n    }\n\n    return fromArrayLike(obj);\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data);\n  }\n}\n\nfunction checked(length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes');\n  }\n\n  return length | 0;\n}\n\nfunction SlowBuffer(length) {\n  if (+length != length) {\n    // eslint-disable-line eqeqeq\n    length = 0;\n  }\n\n  return Buffer.alloc(+length);\n}\n\nBuffer.isBuffer = function isBuffer(b) {\n  return b != null && b._isBuffer === true && b !== Buffer.prototype; // so Buffer.isBuffer(Buffer.prototype) will be false\n};\n\nBuffer.compare = function compare(a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength);\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength);\n\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array');\n  }\n\n  if (a === b) return 0;\n  let x = a.length;\n  let y = b.length;\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) return -1;\n  if (y < x) return 1;\n  return 0;\n};\n\nBuffer.isEncoding = function isEncoding(encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true;\n\n    default:\n      return false;\n  }\n};\n\nBuffer.concat = function concat(list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers');\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0);\n  }\n\n  let i;\n\n  if (length === undefined) {\n    length = 0;\n\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length;\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length);\n  let pos = 0;\n\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i];\n\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf);\n        buf.copy(buffer, pos);\n      } else {\n        Uint8Array.prototype.set.call(buffer, buf, pos);\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers');\n    } else {\n      buf.copy(buffer, pos);\n    }\n\n    pos += buf.length;\n  }\n\n  return buffer;\n};\n\nfunction byteLength(string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length;\n  }\n\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength;\n  }\n\n  if (typeof string !== 'string') {\n    throw new TypeError('The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' + 'Received type ' + typeof string);\n  }\n\n  const len = string.length;\n  const mustMatch = arguments.length > 2 && arguments[2] === true;\n  if (!mustMatch && len === 0) return 0; // Use a for loop to avoid recursion\n\n  let loweredCase = false;\n\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len;\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length;\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2;\n\n      case 'hex':\n        return len >>> 1;\n\n      case 'base64':\n        return base64ToBytes(string).length;\n\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length; // assume utf8\n        }\n\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\n\nBuffer.byteLength = byteLength;\n\nfunction slowToString(encoding, start, end) {\n  let loweredCase = false; // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n\n  if (start === undefined || start < 0) {\n    start = 0;\n  } // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n\n\n  if (start > this.length) {\n    return '';\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length;\n  }\n\n  if (end <= 0) {\n    return '';\n  } // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n\n\n  end >>>= 0;\n  start >>>= 0;\n\n  if (end <= start) {\n    return '';\n  }\n\n  if (!encoding) encoding = 'utf8';\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end);\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end);\n\n      case 'ascii':\n        return asciiSlice(this, start, end);\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end);\n\n      case 'base64':\n        return base64Slice(this, start, end);\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end);\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n        encoding = (encoding + '').toLowerCase();\n        loweredCase = true;\n    }\n  }\n} // This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\n\n\nBuffer.prototype._isBuffer = true;\n\nfunction swap(b, n, m) {\n  const i = b[n];\n  b[n] = b[m];\n  b[m] = i;\n}\n\nBuffer.prototype.swap16 = function swap16() {\n  const len = this.length;\n\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits');\n  }\n\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1);\n  }\n\n  return this;\n};\n\nBuffer.prototype.swap32 = function swap32() {\n  const len = this.length;\n\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits');\n  }\n\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3);\n    swap(this, i + 1, i + 2);\n  }\n\n  return this;\n};\n\nBuffer.prototype.swap64 = function swap64() {\n  const len = this.length;\n\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits');\n  }\n\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7);\n    swap(this, i + 1, i + 6);\n    swap(this, i + 2, i + 5);\n    swap(this, i + 3, i + 4);\n  }\n\n  return this;\n};\n\nBuffer.prototype.toString = function toString() {\n  const length = this.length;\n  if (length === 0) return '';\n  if (arguments.length === 0) return utf8Slice(this, 0, length);\n  return slowToString.apply(this, arguments);\n};\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString;\n\nBuffer.prototype.equals = function equals(b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');\n  if (this === b) return true;\n  return Buffer.compare(this, b) === 0;\n};\n\nBuffer.prototype.inspect = function inspect() {\n  let str = '';\n  const max = exports.INSPECT_MAX_BYTES;\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim();\n  if (this.length > max) str += ' ... ';\n  return '<Buffer ' + str + '>';\n};\n\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect;\n}\n\nBuffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength);\n  }\n\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('The \"target\" argument must be one of type Buffer or Uint8Array. ' + 'Received type ' + typeof target);\n  }\n\n  if (start === undefined) {\n    start = 0;\n  }\n\n  if (end === undefined) {\n    end = target ? target.length : 0;\n  }\n\n  if (thisStart === undefined) {\n    thisStart = 0;\n  }\n\n  if (thisEnd === undefined) {\n    thisEnd = this.length;\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index');\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0;\n  }\n\n  if (thisStart >= thisEnd) {\n    return -1;\n  }\n\n  if (start >= end) {\n    return 1;\n  }\n\n  start >>>= 0;\n  end >>>= 0;\n  thisStart >>>= 0;\n  thisEnd >>>= 0;\n  if (this === target) return 0;\n  let x = thisEnd - thisStart;\n  let y = end - start;\n  const len = Math.min(x, y);\n  const thisCopy = this.slice(thisStart, thisEnd);\n  const targetCopy = target.slice(start, end);\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i];\n      y = targetCopy[i];\n      break;\n    }\n  }\n\n  if (x < y) return -1;\n  if (y < x) return 1;\n  return 0;\n}; // Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\n\n\nfunction bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1; // Normalize byteOffset\n\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset;\n    byteOffset = 0;\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff;\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000;\n  }\n\n  byteOffset = +byteOffset; // Coerce to Number.\n\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : buffer.length - 1;\n  } // Normalize byteOffset: negative offsets start from the end of the buffer\n\n\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1;else byteOffset = buffer.length - 1;\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0;else return -1;\n  } // Normalize val\n\n\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding);\n  } // Finally, search either indexOf (if dir is true) or lastIndexOf\n\n\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1;\n    }\n\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir);\n  } else if (typeof val === 'number') {\n    val = val & 0xFF; // Search for a byte value [0-255]\n\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);\n      }\n    }\n\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);\n  }\n\n  throw new TypeError('val must be string, number or Buffer');\n}\n\nfunction arrayIndexOf(arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1;\n  let arrLength = arr.length;\n  let valLength = val.length;\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase();\n\n    if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1;\n      }\n\n      indexSize = 2;\n      arrLength /= 2;\n      valLength /= 2;\n      byteOffset /= 2;\n    }\n  }\n\n  function read(buf, i) {\n    if (indexSize === 1) {\n      return buf[i];\n    } else {\n      return buf.readUInt16BE(i * indexSize);\n    }\n  }\n\n  let i;\n\n  if (dir) {\n    let foundIndex = -1;\n\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i;\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex;\n        foundIndex = -1;\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true;\n\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false;\n          break;\n        }\n      }\n\n      if (found) return i;\n    }\n  }\n\n  return -1;\n}\n\nBuffer.prototype.includes = function includes(val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1;\n};\n\nBuffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true);\n};\n\nBuffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false);\n};\n\nfunction hexWrite(buf, string, offset, length) {\n  offset = Number(offset) || 0;\n  const remaining = buf.length - offset;\n\n  if (!length) {\n    length = remaining;\n  } else {\n    length = Number(length);\n\n    if (length > remaining) {\n      length = remaining;\n    }\n  }\n\n  const strLen = string.length;\n\n  if (length > strLen / 2) {\n    length = strLen / 2;\n  }\n\n  let i;\n\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16);\n    if (numberIsNaN(parsed)) return i;\n    buf[offset + i] = parsed;\n  }\n\n  return i;\n}\n\nfunction utf8Write(buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);\n}\n\nfunction asciiWrite(buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length);\n}\n\nfunction base64Write(buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length);\n}\n\nfunction ucs2Write(buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);\n}\n\nBuffer.prototype.write = function write(string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8';\n    length = this.length;\n    offset = 0; // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset;\n    length = this.length;\n    offset = 0; // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0;\n\n    if (isFinite(length)) {\n      length = length >>> 0;\n      if (encoding === undefined) encoding = 'utf8';\n    } else {\n      encoding = length;\n      length = undefined;\n    }\n  } else {\n    throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');\n  }\n\n  const remaining = this.length - offset;\n  if (length === undefined || length > remaining) length = remaining;\n\n  if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds');\n  }\n\n  if (!encoding) encoding = 'utf8';\n  let loweredCase = false;\n\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length);\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length);\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length);\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length);\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length);\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n};\n\nBuffer.prototype.toJSON = function toJSON() {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  };\n};\n\nfunction base64Slice(buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf);\n  } else {\n    return base64.fromByteArray(buf.slice(start, end));\n  }\n}\n\nfunction utf8Slice(buf, start, end) {\n  end = Math.min(buf.length, end);\n  const res = [];\n  let i = start;\n\n  while (i < end) {\n    const firstByte = buf[i];\n    let codePoint = null;\n    let bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint;\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte;\n          }\n\n          break;\n\n        case 2:\n          secondByte = buf[i + 1];\n\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;\n\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint;\n            }\n          }\n\n          break;\n\n        case 3:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;\n\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint;\n            }\n          }\n\n          break;\n\n        case 4:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          fourthByte = buf[i + 3];\n\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;\n\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint;\n            }\n          }\n\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD;\n      bytesPerSequence = 1;\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000;\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n      codePoint = 0xDC00 | codePoint & 0x3FF;\n    }\n\n    res.push(codePoint);\n    i += bytesPerSequence;\n  }\n\n  return decodeCodePointsArray(res);\n} // Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\n\n\nconst MAX_ARGUMENTS_LENGTH = 0x1000;\n\nfunction decodeCodePointsArray(codePoints) {\n  const len = codePoints.length;\n\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints); // avoid extra slice()\n  } // Decode in chunks to avoid \"call stack size exceeded\".\n\n\n  let res = '';\n  let i = 0;\n\n  while (i < len) {\n    res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));\n  }\n\n  return res;\n}\n\nfunction asciiSlice(buf, start, end) {\n  let ret = '';\n  end = Math.min(buf.length, end);\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F);\n  }\n\n  return ret;\n}\n\nfunction latin1Slice(buf, start, end) {\n  let ret = '';\n  end = Math.min(buf.length, end);\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i]);\n  }\n\n  return ret;\n}\n\nfunction hexSlice(buf, start, end) {\n  const len = buf.length;\n  if (!start || start < 0) start = 0;\n  if (!end || end < 0 || end > len) end = len;\n  let out = '';\n\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]];\n  }\n\n  return out;\n}\n\nfunction utf16leSlice(buf, start, end) {\n  const bytes = buf.slice(start, end);\n  let res = ''; // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n  }\n\n  return res;\n}\n\nBuffer.prototype.slice = function slice(start, end) {\n  const len = this.length;\n  start = ~~start;\n  end = end === undefined ? len : ~~end;\n\n  if (start < 0) {\n    start += len;\n    if (start < 0) start = 0;\n  } else if (start > len) {\n    start = len;\n  }\n\n  if (end < 0) {\n    end += len;\n    if (end < 0) end = 0;\n  } else if (end > len) {\n    end = len;\n  }\n\n  if (end < start) end = start;\n  const newBuf = this.subarray(start, end); // Return an augmented `Uint8Array` instance\n\n  Object.setPrototypeOf(newBuf, Buffer.prototype);\n  return newBuf;\n};\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\n\n\nfunction checkOffset(offset, ext, length) {\n  if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');\n}\n\nBuffer.prototype.readUintLE = Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  let val = this[offset];\n  let mul = 1;\n  let i = 0;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n\n  return val;\n};\n\nBuffer.prototype.readUintBE = Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length);\n  }\n\n  let val = this[offset + --byteLength];\n  let mul = 1;\n\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul;\n  }\n\n  return val;\n};\n\nBuffer.prototype.readUint8 = Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  return this[offset];\n};\n\nBuffer.prototype.readUint16LE = Buffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] | this[offset + 1] << 8;\n};\n\nBuffer.prototype.readUint16BE = Buffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] << 8 | this[offset + 1];\n};\n\nBuffer.prototype.readUint32LE = Buffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;\n};\n\nBuffer.prototype.readUint32BE = Buffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);\n};\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE(offset) {\n  offset = offset >>> 0;\n  validateNumber(offset, 'offset');\n  const first = this[offset];\n  const last = this[offset + 7];\n\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8);\n  }\n\n  const lo = first + this[++offset] * 2 ** 8 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 24;\n  const hi = this[++offset] + this[++offset] * 2 ** 8 + this[++offset] * 2 ** 16 + last * 2 ** 24;\n  return BigInt(lo) + (BigInt(hi) << BigInt(32));\n});\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE(offset) {\n  offset = offset >>> 0;\n  validateNumber(offset, 'offset');\n  const first = this[offset];\n  const last = this[offset + 7];\n\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8);\n  }\n\n  const hi = first * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + this[++offset];\n  const lo = this[++offset] * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + last;\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo);\n});\n\nBuffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  let val = this[offset];\n  let mul = 1;\n  let i = 0;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n\n  mul *= 0x80;\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n  return val;\n};\n\nBuffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  let i = byteLength;\n  let mul = 1;\n  let val = this[offset + --i];\n\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul;\n  }\n\n  mul *= 0x80;\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n  return val;\n};\n\nBuffer.prototype.readInt8 = function readInt8(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  if (!(this[offset] & 0x80)) return this[offset];\n  return (0xff - this[offset] + 1) * -1;\n};\n\nBuffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  const val = this[offset] | this[offset + 1] << 8;\n  return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\n\nBuffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  const val = this[offset + 1] | this[offset] << 8;\n  return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\n\nBuffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;\n};\n\nBuffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];\n};\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE(offset) {\n  offset = offset >>> 0;\n  validateNumber(offset, 'offset');\n  const first = this[offset];\n  const last = this[offset + 7];\n\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8);\n  }\n\n  const val = this[offset + 4] + this[offset + 5] * 2 ** 8 + this[offset + 6] * 2 ** 16 + (last << 24); // Overflow\n\n  return (BigInt(val) << BigInt(32)) + BigInt(first + this[++offset] * 2 ** 8 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 24);\n});\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE(offset) {\n  offset = offset >>> 0;\n  validateNumber(offset, 'offset');\n  const first = this[offset];\n  const last = this[offset + 7];\n\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8);\n  }\n\n  const val = (first << 24) + // Overflow\n  this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + this[++offset];\n  return (BigInt(val) << BigInt(32)) + BigInt(this[++offset] * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + last);\n});\n\nBuffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return ieee754.read(this, offset, true, 23, 4);\n};\n\nBuffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return ieee754.read(this, offset, false, 23, 4);\n};\n\nBuffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return ieee754.read(this, offset, true, 52, 8);\n};\n\nBuffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return ieee754.read(this, offset, false, 52, 8);\n};\n\nfunction checkInt(buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance');\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds');\n  if (offset + ext > buf.length) throw new RangeError('Index out of range');\n}\n\nBuffer.prototype.writeUintLE = Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  let mul = 1;\n  let i = 0;\n  this[offset] = value & 0xFF;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = value / mul & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeUintBE = Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  let i = byteLength - 1;\n  let mul = 1;\n  this[offset + i] = value & 0xFF;\n\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = value / mul & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeUint8 = Buffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\n  this[offset] = value & 0xff;\n  return offset + 1;\n};\n\nBuffer.prototype.writeUint16LE = Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n  this[offset] = value & 0xff;\n  this[offset + 1] = value >>> 8;\n  return offset + 2;\n};\n\nBuffer.prototype.writeUint16BE = Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n  this[offset] = value >>> 8;\n  this[offset + 1] = value & 0xff;\n  return offset + 2;\n};\n\nBuffer.prototype.writeUint32LE = Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n  this[offset + 3] = value >>> 24;\n  this[offset + 2] = value >>> 16;\n  this[offset + 1] = value >>> 8;\n  this[offset] = value & 0xff;\n  return offset + 4;\n};\n\nBuffer.prototype.writeUint32BE = Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n  this[offset] = value >>> 24;\n  this[offset + 1] = value >>> 16;\n  this[offset + 2] = value >>> 8;\n  this[offset + 3] = value & 0xff;\n  return offset + 4;\n};\n\nfunction wrtBigUInt64LE(buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7);\n  let lo = Number(value & BigInt(0xffffffff));\n  buf[offset++] = lo;\n  lo = lo >> 8;\n  buf[offset++] = lo;\n  lo = lo >> 8;\n  buf[offset++] = lo;\n  lo = lo >> 8;\n  buf[offset++] = lo;\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff));\n  buf[offset++] = hi;\n  hi = hi >> 8;\n  buf[offset++] = hi;\n  hi = hi >> 8;\n  buf[offset++] = hi;\n  hi = hi >> 8;\n  buf[offset++] = hi;\n  return offset;\n}\n\nfunction wrtBigUInt64BE(buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7);\n  let lo = Number(value & BigInt(0xffffffff));\n  buf[offset + 7] = lo;\n  lo = lo >> 8;\n  buf[offset + 6] = lo;\n  lo = lo >> 8;\n  buf[offset + 5] = lo;\n  lo = lo >> 8;\n  buf[offset + 4] = lo;\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff));\n  buf[offset + 3] = hi;\n  hi = hi >> 8;\n  buf[offset + 2] = hi;\n  hi = hi >> 8;\n  buf[offset + 1] = hi;\n  hi = hi >> 8;\n  buf[offset] = hi;\n  return offset + 8;\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE(value) {\n  let offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'));\n});\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE(value) {\n  let offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'));\n});\n\nBuffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n\n  if (!noAssert) {\n    const limit = Math.pow(2, 8 * byteLength - 1);\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  let i = 0;\n  let mul = 1;\n  let sub = 0;\n  this[offset] = value & 0xFF;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1;\n    }\n\n    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n\n  if (!noAssert) {\n    const limit = Math.pow(2, 8 * byteLength - 1);\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  let i = byteLength - 1;\n  let mul = 1;\n  let sub = 0;\n  this[offset + i] = value & 0xFF;\n\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1;\n    }\n\n    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);\n  if (value < 0) value = 0xff + value + 1;\n  this[offset] = value & 0xff;\n  return offset + 1;\n};\n\nBuffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n  this[offset] = value & 0xff;\n  this[offset + 1] = value >>> 8;\n  return offset + 2;\n};\n\nBuffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n  this[offset] = value >>> 8;\n  this[offset + 1] = value & 0xff;\n  return offset + 2;\n};\n\nBuffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  this[offset] = value & 0xff;\n  this[offset + 1] = value >>> 8;\n  this[offset + 2] = value >>> 16;\n  this[offset + 3] = value >>> 24;\n  return offset + 4;\n};\n\nBuffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  if (value < 0) value = 0xffffffff + value + 1;\n  this[offset] = value >>> 24;\n  this[offset + 1] = value >>> 16;\n  this[offset + 2] = value >>> 8;\n  this[offset + 3] = value & 0xff;\n  return offset + 4;\n};\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE(value) {\n  let offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'));\n});\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE(value) {\n  let offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'));\n});\n\nfunction checkIEEE754(buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range');\n  if (offset < 0) throw new RangeError('Index out of range');\n}\n\nfunction writeFloat(buf, value, offset, littleEndian, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38);\n  }\n\n  ieee754.write(buf, value, offset, littleEndian, 23, 4);\n  return offset + 4;\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert);\n};\n\nBuffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert);\n};\n\nfunction writeDouble(buf, value, offset, littleEndian, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308);\n  }\n\n  ieee754.write(buf, value, offset, littleEndian, 52, 8);\n  return offset + 8;\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert);\n};\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert);\n}; // copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n\n\nBuffer.prototype.copy = function copy(target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer');\n  if (!start) start = 0;\n  if (!end && end !== 0) end = this.length;\n  if (targetStart >= target.length) targetStart = target.length;\n  if (!targetStart) targetStart = 0;\n  if (end > 0 && end < start) end = start; // Copy 0 bytes; we're done\n\n  if (end === start) return 0;\n  if (target.length === 0 || this.length === 0) return 0; // Fatal error conditions\n\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds');\n  }\n\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range');\n  if (end < 0) throw new RangeError('sourceEnd out of bounds'); // Are we oob?\n\n  if (end > this.length) end = this.length;\n\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start;\n  }\n\n  const len = end - start;\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end);\n  } else {\n    Uint8Array.prototype.set.call(target, this.subarray(start, end), targetStart);\n  }\n\n  return len;\n}; // Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\n\n\nBuffer.prototype.fill = function fill(val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start;\n      start = 0;\n      end = this.length;\n    } else if (typeof end === 'string') {\n      encoding = end;\n      end = this.length;\n    }\n\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string');\n    }\n\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding);\n    }\n\n    if (val.length === 1) {\n      const code = val.charCodeAt(0);\n\n      if (encoding === 'utf8' && code < 128 || encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code;\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255;\n  } else if (typeof val === 'boolean') {\n    val = Number(val);\n  } // Invalid ranges are not set to a default, so can range check early.\n\n\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index');\n  }\n\n  if (end <= start) {\n    return this;\n  }\n\n  start = start >>> 0;\n  end = end === undefined ? this.length : end >>> 0;\n  if (!val) val = 0;\n  let i;\n\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val;\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val) ? val : Buffer.from(val, encoding);\n    const len = bytes.length;\n\n    if (len === 0) {\n      throw new TypeError('The value \"' + val + '\" is invalid for argument \"value\"');\n    }\n\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len];\n    }\n  }\n\n  return this;\n}; // CUSTOM ERRORS\n// =============\n// Simplified versions from Node, changed for Buffer-only usage\n\n\nconst errors = {};\n\nfunction E(sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor() {\n      super();\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      }); // Add the error code to the name to include it in the stack trace.\n\n      this.name = `${this.name} [${sym}]`; // Access the stack to generate the error message including the error code\n      // from the name.\n\n      this.stack; // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n\n      delete this.name;\n    }\n\n    get code() {\n      return sym;\n    }\n\n    set code(value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      });\n    }\n\n    toString() {\n      return `${this.name} [${sym}]: ${this.message}`;\n    }\n\n  };\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS', function (name) {\n  if (name) {\n    return `${name} is outside of buffer bounds`;\n  }\n\n  return 'Attempt to access memory outside buffer bounds';\n}, RangeError);\nE('ERR_INVALID_ARG_TYPE', function (name, actual) {\n  return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`;\n}, TypeError);\nE('ERR_OUT_OF_RANGE', function (str, range, input) {\n  let msg = `The value of \"${str}\" is out of range.`;\n  let received = input;\n\n  if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n    received = addNumericalSeparator(String(input));\n  } else if (typeof input === 'bigint') {\n    received = String(input);\n\n    if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n      received = addNumericalSeparator(received);\n    }\n\n    received += 'n';\n  }\n\n  msg += ` It must be ${range}. Received ${received}`;\n  return msg;\n}, RangeError);\n\nfunction addNumericalSeparator(val) {\n  let res = '';\n  let i = val.length;\n  const start = val[0] === '-' ? 1 : 0;\n\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`;\n  }\n\n  return `${val.slice(0, i)}${res}`;\n} // CHECK FUNCTIONS\n// ===============\n\n\nfunction checkBounds(buf, offset, byteLength) {\n  validateNumber(offset, 'offset');\n\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1));\n  }\n}\n\nfunction checkIntBI(value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : '';\n    let range;\n\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`;\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` + `${(byteLength + 1) * 8 - 1}${n}`;\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`;\n    }\n\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value);\n  }\n\n  checkBounds(buf, offset, byteLength);\n}\n\nfunction validateNumber(value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value);\n  }\n}\n\nfunction boundsError(value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type);\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value);\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS();\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset', `>= ${type ? 1 : 0} and <= ${length}`, value);\n} // HELPER FUNCTIONS\n// ================\n\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;\n\nfunction base64clean(str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]; // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n\n  str = str.trim().replace(INVALID_BASE64_RE, ''); // Node converts strings with length < 2 to ''\n\n  if (str.length < 2) return ''; // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n\n  while (str.length % 4 !== 0) {\n    str = str + '=';\n  }\n\n  return str;\n}\n\nfunction utf8ToBytes(string, units) {\n  units = units || Infinity;\n  let codePoint;\n  const length = string.length;\n  let leadSurrogate = null;\n  const bytes = [];\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i); // is surrogate component\n\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue;\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue;\n        } // valid lead\n\n\n        leadSurrogate = codePoint;\n        continue;\n      } // 2 leads in a row\n\n\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n        leadSurrogate = codePoint;\n        continue;\n      } // valid surrogate pair\n\n\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n    }\n\n    leadSurrogate = null; // encode utf8\n\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break;\n      bytes.push(codePoint);\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break;\n      bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break;\n      bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break;\n      bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n    } else {\n      throw new Error('Invalid code point');\n    }\n  }\n\n  return bytes;\n}\n\nfunction asciiToBytes(str) {\n  const byteArray = [];\n\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF);\n  }\n\n  return byteArray;\n}\n\nfunction utf16leToBytes(str, units) {\n  let c, hi, lo;\n  const byteArray = [];\n\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break;\n    c = str.charCodeAt(i);\n    hi = c >> 8;\n    lo = c % 256;\n    byteArray.push(lo);\n    byteArray.push(hi);\n  }\n\n  return byteArray;\n}\n\nfunction base64ToBytes(str) {\n  return base64.toByteArray(base64clean(str));\n}\n\nfunction blitBuffer(src, dst, offset, length) {\n  let i;\n\n  for (i = 0; i < length; ++i) {\n    if (i + offset >= dst.length || i >= src.length) break;\n    dst[i + offset] = src[i];\n  }\n\n  return i;\n} // ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\n\n\nfunction isInstance(obj, type) {\n  return obj instanceof type || obj != null && obj.constructor != null && obj.constructor.name != null && obj.constructor.name === type.name;\n}\n\nfunction numberIsNaN(obj) {\n  // For IE11 support\n  return obj !== obj; // eslint-disable-line no-self-compare\n} // Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\n\n\nconst hexSliceLookupTable = function () {\n  const alphabet = '0123456789abcdef';\n  const table = new Array(256);\n\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16;\n\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j];\n    }\n  }\n\n  return table;\n}(); // Return not function with Error if BigInt not supported\n\n\nfunction defineBigIntMethod(fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn;\n}\n\nfunction BufferBigIntNotDefined() {\n  throw new Error('BigInt not supported');\n}","map":{"version":3,"names":["base64","require","ieee754","customInspectSymbol","Symbol","exports","Buffer","SlowBuffer","INSPECT_MAX_BYTES","K_MAX_LENGTH","kMaxLength","TYPED_ARRAY_SUPPORT","typedArraySupport","console","error","arr","Uint8Array","proto","foo","Object","setPrototypeOf","prototype","e","defineProperty","enumerable","get","isBuffer","undefined","buffer","byteOffset","createBuffer","length","RangeError","buf","arg","encodingOrOffset","TypeError","allocUnsafe","from","poolSize","value","fromString","ArrayBuffer","isView","fromArrayView","isInstance","fromArrayBuffer","SharedArrayBuffer","valueOf","b","fromObject","toPrimitive","assertSize","size","alloc","fill","encoding","checked","allocUnsafeSlow","string","isEncoding","byteLength","actual","write","slice","fromArrayLike","array","i","arrayView","copy","obj","len","numberIsNaN","type","Array","isArray","data","toString","_isBuffer","compare","a","offset","x","y","Math","min","String","toLowerCase","concat","list","pos","set","call","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","slowToString","start","end","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","m","swap16","swap32","swap64","apply","toLocaleString","equals","inspect","str","max","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","bidirectionalIndexOf","val","dir","arrayIndexOf","indexOf","lastIndexOf","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","j","includes","hexWrite","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","asciiToBytes","base64Write","ucs2Write","utf16leToBytes","isFinite","Error","toJSON","_arr","fromByteArray","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","push","decodeCodePointsArray","MAX_ARGUMENTS_LENGTH","codePoints","fromCharCode","ret","out","hexSliceLookupTable","bytes","newBuf","subarray","checkOffset","ext","readUintLE","readUIntLE","noAssert","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","lo","hi","BigInt","readBigUInt64BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","checkInt","writeUintLE","writeUIntLE","maxBytes","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","wrtBigUInt64LE","checkIntBI","wrtBigUInt64BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","checkIEEE754","writeFloat","littleEndian","writeFloatLE","writeFloatBE","writeDouble","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","code","charCodeAt","errors","E","sym","getMessage","Base","NodeError","constructor","writable","configurable","name","stack","message","range","input","msg","received","isInteger","abs","addNumericalSeparator","checkBounds","ERR_OUT_OF_RANGE","ERR_INVALID_ARG_TYPE","floor","ERR_BUFFER_OUT_OF_BOUNDS","INVALID_BASE64_RE","base64clean","split","units","Infinity","leadSurrogate","byteArray","c","toByteArray","src","dst","alphabet","table","i16","fn","BufferBigIntNotDefined"],"sources":["/home/giorgir/Desktop/web projects/discord-mern/client/node_modules/simple-peer/node_modules/buffer/index.js"],"sourcesContent":["/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}