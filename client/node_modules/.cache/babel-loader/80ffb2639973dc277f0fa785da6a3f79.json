{"ast":null,"code":"import _assertThisInitialized from \"/home/giorgir/Desktop/web projects/discord-mern/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _classCallCheck from \"/home/giorgir/Desktop/web projects/discord-mern/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/giorgir/Desktop/web projects/discord-mern/client/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/giorgir/Desktop/web projects/discord-mern/client/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/giorgir/Desktop/web projects/discord-mern/client/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n\n/* global attachEvent */\nimport XMLHttpRequest from \"./xmlhttprequest.js\";\nimport globalThis from \"../globalThis.js\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { Polling } from \"./polling.js\";\n/**\n * Empty function\n */\n\nfunction empty() {}\n\nvar hasXHR2 = function () {\n  var xhr = new XMLHttpRequest({\n    xdomain: false\n  });\n  return null != xhr.responseType;\n}();\n\nexport var XHR = /*#__PURE__*/function (_Polling) {\n  _inherits(XHR, _Polling);\n\n  var _super = _createSuper(XHR);\n\n  /**\n   * XHR Polling constructor.\n   *\n   * @param {Object} opts\n   * @api public\n   */\n  function XHR(opts) {\n    var _this;\n\n    _classCallCheck(this, XHR);\n\n    _this = _super.call(this, opts);\n\n    if (typeof location !== \"undefined\") {\n      var isSSL = \"https:\" === location.protocol;\n      var port = location.port; // some user agents have empty `location.port`\n\n      if (!port) {\n        port = isSSL ? \"443\" : \"80\";\n      }\n\n      _this.xd = typeof location !== \"undefined\" && opts.hostname !== location.hostname || port !== opts.port;\n      _this.xs = opts.secure !== isSSL;\n    }\n    /**\n     * XHR supports binary\n     */\n\n\n    var forceBase64 = opts && opts.forceBase64;\n    _this.supportsBinary = hasXHR2 && !forceBase64;\n    return _this;\n  }\n  /**\n   * Creates a request.\n   *\n   * @param {String} method\n   * @api private\n   */\n\n\n  _createClass(XHR, [{\n    key: \"request\",\n    value: function request() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      Object.assign(opts, {\n        xd: this.xd,\n        xs: this.xs\n      }, this.opts);\n      return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @api private\n     */\n\n  }, {\n    key: \"doWrite\",\n    value: function doWrite(data, fn) {\n      var _this2 = this;\n\n      var req = this.request({\n        method: \"POST\",\n        data: data\n      });\n      req.on(\"success\", fn);\n      req.on(\"error\", function (err) {\n        _this2.onError(\"xhr post error\", err);\n      });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @api private\n     */\n\n  }, {\n    key: \"doPoll\",\n    value: function doPoll() {\n      var _this3 = this;\n\n      var req = this.request();\n      req.on(\"data\", this.onData.bind(this));\n      req.on(\"error\", function (err) {\n        _this3.onError(\"xhr poll error\", err);\n      });\n      this.pollXhr = req;\n    }\n  }]);\n\n  return XHR;\n}(Polling);\nexport var Request = /*#__PURE__*/function (_Emitter) {\n  _inherits(Request, _Emitter);\n\n  var _super2 = _createSuper(Request);\n\n  /**\n   * Request constructor\n   *\n   * @param {Object} options\n   * @api public\n   */\n  function Request(uri, opts) {\n    var _this4;\n\n    _classCallCheck(this, Request);\n\n    _this4 = _super2.call(this);\n    installTimerFunctions(_assertThisInitialized(_this4), opts);\n    _this4.opts = opts;\n    _this4.method = opts.method || \"GET\";\n    _this4.uri = uri;\n    _this4.async = false !== opts.async;\n    _this4.data = undefined !== opts.data ? opts.data : null;\n\n    _this4.create();\n\n    return _this4;\n  }\n  /**\n   * Creates the XHR object and sends the request.\n   *\n   * @api private\n   */\n\n\n  _createClass(Request, [{\n    key: \"create\",\n    value: function create() {\n      var _this5 = this;\n\n      var opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n      opts.xdomain = !!this.opts.xd;\n      opts.xscheme = !!this.opts.xs;\n      var xhr = this.xhr = new XMLHttpRequest(opts);\n\n      try {\n        xhr.open(this.method, this.uri, this.async);\n\n        try {\n          if (this.opts.extraHeaders) {\n            xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n\n            for (var i in this.opts.extraHeaders) {\n              if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n              }\n            }\n          }\n        } catch (e) {}\n\n        if (\"POST\" === this.method) {\n          try {\n            xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n          } catch (e) {}\n        }\n\n        try {\n          xhr.setRequestHeader(\"Accept\", \"*/*\");\n        } catch (e) {} // ie6 check\n\n\n        if (\"withCredentials\" in xhr) {\n          xhr.withCredentials = this.opts.withCredentials;\n        }\n\n        if (this.opts.requestTimeout) {\n          xhr.timeout = this.opts.requestTimeout;\n        }\n\n        xhr.onreadystatechange = function () {\n          if (4 !== xhr.readyState) return;\n\n          if (200 === xhr.status || 1223 === xhr.status) {\n            _this5.onLoad();\n          } else {\n            // make sure the `error` event handler that's user-set\n            // does not throw in the same tick and gets caught here\n            _this5.setTimeoutFn(function () {\n              _this5.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n            }, 0);\n          }\n        };\n\n        xhr.send(this.data);\n      } catch (e) {\n        // Need to defer since .create() is called directly from the constructor\n        // and thus the 'error' event can only be only bound *after* this exception\n        // occurs.  Therefore, also, we cannot throw here at all.\n        this.setTimeoutFn(function () {\n          _this5.onError(e);\n        }, 0);\n        return;\n      }\n\n      if (typeof document !== \"undefined\") {\n        this.index = Request.requestsCount++;\n        Request.requests[this.index] = this;\n      }\n    }\n    /**\n     * Called upon successful response.\n     *\n     * @api private\n     */\n\n  }, {\n    key: \"onSuccess\",\n    value: function onSuccess() {\n      this.emit(\"success\");\n      this.cleanup();\n    }\n    /**\n     * Called if we have data.\n     *\n     * @api private\n     */\n\n  }, {\n    key: \"onData\",\n    value: function onData(data) {\n      this.emit(\"data\", data);\n      this.onSuccess();\n    }\n    /**\n     * Called upon error.\n     *\n     * @api private\n     */\n\n  }, {\n    key: \"onError\",\n    value: function onError(err) {\n      this.emit(\"error\", err);\n      this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @api private\n     */\n\n  }, {\n    key: \"cleanup\",\n    value: function cleanup(fromError) {\n      if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n        return;\n      }\n\n      this.xhr.onreadystatechange = empty;\n\n      if (fromError) {\n        try {\n          this.xhr.abort();\n        } catch (e) {}\n      }\n\n      if (typeof document !== \"undefined\") {\n        delete Request.requests[this.index];\n      }\n\n      this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @api private\n     */\n\n  }, {\n    key: \"onLoad\",\n    value: function onLoad() {\n      var data = this.xhr.responseText;\n\n      if (data !== null) {\n        this.onData(data);\n      }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @api public\n     */\n\n  }, {\n    key: \"abort\",\n    value: function abort() {\n      this.cleanup();\n    }\n  }]);\n\n  return Request;\n}(Emitter);\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\n\nif (typeof document !== \"undefined\") {\n  // @ts-ignore\n  if (typeof attachEvent === \"function\") {\n    // @ts-ignore\n    attachEvent(\"onunload\", unloadHandler);\n  } else if (typeof addEventListener === \"function\") {\n    var terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n    addEventListener(terminationEvent, unloadHandler, false);\n  }\n}\n\nfunction unloadHandler() {\n  for (var i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}","map":{"version":3,"names":["XMLHttpRequest","globalThis","installTimerFunctions","pick","Emitter","Polling","empty","hasXHR2","xhr","xdomain","responseType","XHR","opts","location","isSSL","protocol","port","xd","hostname","xs","secure","forceBase64","supportsBinary","Object","assign","Request","uri","data","fn","req","request","method","on","err","onError","onData","bind","pollXhr","async","undefined","create","xscheme","open","extraHeaders","setDisableHeaderCheck","i","hasOwnProperty","setRequestHeader","e","withCredentials","requestTimeout","timeout","onreadystatechange","readyState","status","onLoad","setTimeoutFn","send","document","index","requestsCount","requests","emit","cleanup","onSuccess","fromError","abort","responseText","attachEvent","unloadHandler","addEventListener","terminationEvent"],"sources":["/home/giorgir/Desktop/web projects/discord-mern/client/node_modules/engine.io-client/build/esm/transports/polling-xhr.js"],"sourcesContent":["/* global attachEvent */\nimport XMLHttpRequest from \"./xmlhttprequest.js\";\nimport globalThis from \"../globalThis.js\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { Polling } from \"./polling.js\";\n/**\n * Empty function\n */\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false\n    });\n    return null != xhr.responseType;\n})();\nexport class XHR extends Polling {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @api private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @api private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", err => {\n            this.onError(\"xhr post error\", err);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @api private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", err => {\n            this.onError(\"xhr poll error\", err);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @api public\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @api private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon successful response.\n     *\n     * @api private\n     */\n    onSuccess() {\n        this.emit(\"success\");\n        this.cleanup();\n    }\n    /**\n     * Called if we have data.\n     *\n     * @api private\n     */\n    onData(data) {\n        this.emit(\"data\", data);\n        this.onSuccess();\n    }\n    /**\n     * Called upon error.\n     *\n     * @api private\n     */\n    onError(err) {\n        this.emit(\"error\", err);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @api private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @api private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.onData(data);\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @api public\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}