{"ast":null,"code":"var _jsxFileName = \"/home/giorgir/Desktop/web projects/discord-mern/client/src/components/Voice/_voice.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { socket } from '../js/_socketSide';\nimport Peer from 'simple-peer';\nimport { MicSVGOff, MicSVGOn, CamSVGOff, CamSVGOn, ScreenShareOff, ScreenShareOn, FullScreen } from '../../styles/SVGs/_SVGs';\nimport \"./_voice.sass\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst egress = history => {\n  history.push(\"/chat/61ed960432479c682956802b\");\n};\n\nconst Frame = _ref => {\n  let {\n    name,\n    status,\n    videoStream\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"frame\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"name\",\n      children: [name, \":\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      className: \"video\",\n      autoPlay: true,\n      controls: true,\n      ref: videoStream\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"statusLabel\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Frame;\n\nconst VoiceFrame = _ref2 => {\n  _s();\n\n  let {\n    history,\n    roomId,\n    userName\n  } = _ref2;\n\n  const setLabel = (user, text) => {\n    if (user === \"current\") {\n      let newUsers = users;\n      newUsers[0][1] = text;\n      setUsers([...newUsers]);\n    } else {//pass\n    }\n  };\n\n  const [mediaStream, setMediaStream] = useState();\n  const [users, setUsers] = useState([]);\n  const videoStreams = [useRef(), useRef()]; // [0] is of current device\n\n  const [mediaData, setMediaData] = useState({\n    audio: false,\n    video: true\n  });\n  useEffect(() => {\n    setUsers([[userName, \"\"]]); // socket.emit(\"join voice\", {\n    //     roomId: roomId,\n    //     username: username,\n    // });\n\n    socket.on(\"all users\", data => {// pass\n    });\n    socket.on(\"user joined\", data => {// pass\n    });\n    socket.on(\"new stream\", data => {// pass\n    });\n  }, []);\n  useEffect(() => {\n    navigator.mediaDevices.getUserMedia(mediaData).then(stream => {\n      // console.log(stream);\n      setMediaStream(stream);\n      videoStreams[0].current.srcObject = stream; // Todo: set media label to \"No Video\"\n\n      if (!mediaData.video) setLabel(\"current\", \"No Video\");else setLabel(\"current\", \"\");\n    }).catch(err => {\n      try {\n        mediaStream.getTracks().forEach(track => track.stop()); // Todo: set media label to \"No Signal\"\n\n        setLabel(\"current\", \"No Signal\");\n      } catch (TypeError) {// setLabel(\"current\", \"no video\");\n        // console.log(\"no shit...\");\n      }\n    });\n  }, [mediaData]);\n  useEffect(() => {\n    console.log(\".......\");\n  }, [users]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"webrtc\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"windows\",\n      children: users.map((user, n) => /*#__PURE__*/_jsxDEV(Frame, {\n        name: user[0],\n        status: user[1],\n        videoStream: videoStreams[n]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 41\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bottom\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icons\",\n        children: [mediaData.audio ? /*#__PURE__*/_jsxDEV(MicSVGOn, {\n          mediaData: mediaData,\n          setMediaData: setMediaData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(MicSVGOff, {\n          mediaData: mediaData,\n          setMediaData: setMediaData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), mediaData.video ? /*#__PURE__*/_jsxDEV(CamSVGOn, {\n          mediaData: mediaData,\n          setMediaData: setMediaData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(CamSVGOff, {\n          mediaData: mediaData,\n          setMediaData: setMediaData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ScreenShareOn, {\n          mediaData: mediaData,\n          setMediaData: setMediaData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"egress\",\n        onClick: () => egress(history),\n        children: \"egress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n};\n\n_s(VoiceFrame, \"GX7mv9wmZfr9uDs9GgbO5/Vp/JI=\");\n\n_c2 = VoiceFrame;\n\nconst screenShareOn = () => {// pass\n};\n\nconst screenShareOff = () => {// pass\n};\n\nconst webCamOn = () => {// pass\n};\n\nconst webCamOff = () => {// pass\n};\n\nconst micOn = () => {// pass\n};\n\nconst micOff = () => {// pass\n};\n\nconst checkMode = (voiceMode, setStatusLabel) => {\n  if (!voiceMode) setStatusLabel(\"invalid\");\n};\n\nexport { VoiceFrame };\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Frame\");\n$RefreshReg$(_c2, \"VoiceFrame\");","map":{"version":3,"names":["React","useState","useEffect","useRef","socket","Peer","MicSVGOff","MicSVGOn","CamSVGOff","CamSVGOn","ScreenShareOff","ScreenShareOn","FullScreen","egress","history","push","Frame","name","status","videoStream","VoiceFrame","roomId","userName","setLabel","user","text","newUsers","users","setUsers","mediaStream","setMediaStream","videoStreams","mediaData","setMediaData","audio","video","on","data","navigator","mediaDevices","getUserMedia","then","stream","current","srcObject","catch","err","getTracks","forEach","track","stop","TypeError","console","log","map","n","screenShareOn","screenShareOff","webCamOn","webCamOff","micOn","micOff","checkMode","voiceMode","setStatusLabel"],"sources":["/home/giorgir/Desktop/web projects/discord-mern/client/src/components/Voice/_voice.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\n\r\nimport { socket } from '../js/_socketSide';\r\n\r\nimport Peer from 'simple-peer';\r\n\r\nimport { MicSVGOff, MicSVGOn, CamSVGOff, CamSVGOn, ScreenShareOff, ScreenShareOn, FullScreen } from '../../styles/SVGs/_SVGs';\r\n\r\nimport \"./_voice.sass\";\r\n\r\nconst egress = (history) => {\r\n    history.push(\"/chat/61ed960432479c682956802b\");\r\n}\r\n\r\nconst Frame = ({ name, status, videoStream }) => (\r\n    <div className=\"frame\">\r\n        <h4 className=\"name\">{name}:</h4>\r\n        {/* style={{height: 150, width: 100}} */}\r\n        <video className=\"video\" autoPlay controls ref={videoStream} />\r\n        <h4 className=\"statusLabel\">{status}</h4>\r\n    </div>\r\n)\r\n\r\nconst VoiceFrame = ({ history, roomId, userName }) => {\r\n    const setLabel = (user, text) => {\r\n        if (user === \"current\"){\r\n            let newUsers = users;\r\n            newUsers[0][1] = text;\r\n            setUsers([...newUsers]);\r\n        }\r\n        else {\r\n            //pass\r\n        }\r\n    }\r\n\r\n    const [mediaStream, setMediaStream] = useState();\r\n\r\n    const [users, setUsers] = useState([]);\r\n\r\n    const videoStreams = [useRef(), useRef()]; // [0] is of current device\r\n\r\n    const [mediaData, setMediaData] = useState({ audio: false, video: true });\r\n\r\n    useEffect(() => {\r\n        setUsers([[userName, \"\"]]);\r\n        // socket.emit(\"join voice\", {\r\n        //     roomId: roomId,\r\n        //     username: username,\r\n        // });\r\n        \r\n        socket.on(\"all users\", data => {\r\n            // pass\r\n        });\r\n\r\n        socket.on(\"user joined\", data => {\r\n            // pass\r\n        });\r\n\r\n        socket.on(\"new stream\", data => {\r\n            // pass\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        navigator.mediaDevices.getUserMedia(mediaData)\r\n        .then(stream => {\r\n            // console.log(stream);\r\n            setMediaStream(stream);\r\n            videoStreams[0].current.srcObject = stream;\r\n\r\n            // Todo: set media label to \"No Video\"\r\n            if (!mediaData.video)\r\n                setLabel(\"current\", \"No Video\");\r\n            else\r\n                setLabel(\"current\", \"\");\r\n        })\r\n        .catch(err => {\r\n            try {\r\n                mediaStream.getTracks().forEach(track => track.stop());\r\n                // Todo: set media label to \"No Signal\"\r\n                setLabel(\"current\", \"No Signal\");\r\n            }\r\n            catch (TypeError){\r\n                // setLabel(\"current\", \"no video\");\r\n                // console.log(\"no shit...\");\r\n            }\r\n        });\r\n    }, [mediaData]);\r\n\r\n    useEffect(() => {\r\n        console.log(\".......\")\r\n    }, [users]);\r\n\r\n    return(\r\n        <div className=\"webrtc\">\r\n            <div className=\"windows\">\r\n                {users.map((user, n) => <Frame name={user[0]} status={user[1]} videoStream={videoStreams[n]} />)}\r\n            </div>\r\n\r\n            <div className=\"bottom\">\r\n                <div className=\"icons\">\r\n                    {mediaData.audio ?\r\n                    <MicSVGOn mediaData={mediaData} setMediaData={setMediaData} />\r\n                    :\r\n                    <MicSVGOff mediaData={mediaData} setMediaData={setMediaData} />\r\n                    }\r\n                    {mediaData.video ?\r\n                    <CamSVGOn mediaData={mediaData} setMediaData={setMediaData} />\r\n                    :\r\n                    <CamSVGOff mediaData={mediaData} setMediaData={setMediaData} />\r\n                    }\r\n                    \r\n                    <ScreenShareOn mediaData={mediaData} setMediaData={setMediaData} />\r\n                </div>\r\n                <button className=\"egress\" onClick={() => egress(history)}>egress</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst screenShareOn = () => {\r\n    // pass\r\n}\r\n\r\nconst screenShareOff = () => {\r\n    // pass\r\n}\r\n\r\nconst webCamOn = () => {\r\n    // pass\r\n}\r\n\r\nconst webCamOff = () => {\r\n    // pass\r\n}\r\n\r\nconst micOn = () => {\r\n    // pass\r\n}\r\n\r\nconst micOff = () => {\r\n    // pass\r\n}\r\n\r\nconst checkMode = (voiceMode, setStatusLabel) => {\r\n    if (!voiceMode)\r\n        setStatusLabel(\"invalid\");\r\n}\r\n\r\nexport {\r\n    VoiceFrame,\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}